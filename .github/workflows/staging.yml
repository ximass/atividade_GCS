name: Staging Deployment

on:
  push:
    branches:
      - staging

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testing
        options: >-
          --health-cmd pg_isready
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_pgsql, dom, filter, gd, json, pdo

      - name: Copy environment file
        run: |
          cp .env.staging .env
          echo "DB_PASSWORD=postgres" >> .env

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Generate application key
        run: php artisan key:generate

      - name: Clear config cache
        run: php artisan config:clear      - name: Run database migrations
        run: php artisan migrate --force

      - name: Run tests
        run: php artisan test

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and deploy to staging
        run: |
          echo "Building Docker image..."
          docker build -f docker/Dockerfile -t laravel-staging:latest .
          
          echo "Stopping existing containers..."
          docker-compose -f docker/docker-compose.staging.yml down || true
          
          echo "Starting new containers..."
          docker-compose -f docker/docker-compose.staging.yml up -d
          
          echo "Waiting for services to be ready..."
          sleep 30
          
          echo "Running migrations in container..."
          docker exec laravel-staging-app php artisan migrate --force
          
          echo "Deployment completed!"
