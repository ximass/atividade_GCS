name: Staging Deployment

on:
  push:
    branches:
      - staging
  pull_request:
    branches:
      - staging

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: testing
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_pgsql, dom, filter, gd, iconv, json, mbstring, pdo

      - name: Copy environment file
        run: cp .env.staging .env

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Generate application key
        run: php artisan key:generate

      - name: Clear config cache
        run: php artisan config:clear

      - name: Run database migrations
        env:
          DB_CONNECTION: pgsql
          DB_HOST: localhost
          DB_PORT: 5432
          DB_DATABASE: testing
          DB_USERNAME: postgres
          DB_PASSWORD: postgres
        run: php artisan migrate --force

      - name: Run database seeds
        env:
          DB_CONNECTION: pgsql
          DB_HOST: localhost
          DB_PORT: 5432
          DB_DATABASE: testing
          DB_USERNAME: postgres
          DB_PASSWORD: postgres
        run: php artisan db:seed --force

      - name: Run tests
        env:
          DB_CONNECTION: pgsql
          DB_HOST: localhost
          DB_PORT: 5432
          DB_DATABASE: testing
          DB_USERNAME: postgres
          DB_PASSWORD: postgres
        run: php artisan test

      - name: Run PHPUnit tests
        env:
          DB_CONNECTION: pgsql
          DB_HOST: localhost
          DB_PORT: 5432
          DB_DATABASE: testing
          DB_USERNAME: postgres
          DB_PASSWORD: postgres
        run: ./vendor/bin/phpunit

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging' && github.event_name == 'push'
    
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub (Optional)
        if: github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          cd docker
          docker build -f Dockerfile -t laravel-staging:latest ..

      - name: Deploy to staging
        run: |
          cd docker
          docker-compose -f docker-compose.staging.yml down || true
          docker-compose -f docker-compose.staging.yml up -d

      - name: Wait for services to be ready
        run: sleep 30

      - name: Run migrations on staging
        run: |
          docker exec laravel-staging-app php artisan migrate --force

      - name: Run seeds on staging (optional)
        run: |
          docker exec laravel-staging-app php artisan db:seed --force || true

      - name: Health check
        run: |
          curl -f http://localhost:8080/health || curl -f http://localhost:8080/ || echo "Health check failed"
